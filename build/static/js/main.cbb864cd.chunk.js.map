{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/Loader/Loader.module.css","pages/About.jsx","hooks/useFetching.js","utils/pages.js","components/UI/button/MyButton.jsx","components/UI/MyModal/MyModal.jsx","components/UI/input/MyInput.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/UI/pagination/Pagination.jsx","hooks/usePosts.js","API/PostService.js","components/PostItem.jsx","components/PostList.jsx","components/UI/Loader/Loader.jsx","components/PostForm.jsx","pages/Posts.jsx","hooks/useObserver.js","context/context.js","components/UI/Navbar/navbar.jsx","pages/PostIdPage.jsx","router/router.js","pages/Login.jsx","components/AppRouter.jsx","App.js","index.js"],"names":["module","exports","About","useFetching","callback","useState","isLoading","setIsLoading","error","setError","fetching","a","onmessage","getPageCount","totalCount","limit","Math","ceil","MyButton","children","props","className","classes","myBtn","MyModal","visible","setVisible","rootClasses","cl","myModal","push","active","join","onClick","myModalContent","e","stopPropagation","MyInput","React","forwardRef","ref","myInput","MySelect","option","defaultValue","value","onChange","event","target","disabled","map","name","PostFilter","filter","setFilter","query","placeholder","sort","selectedSort","Pagination","totalPages","page","changePage","pagesArray","result","i","getPagesArray","p","usePosts","posts","sortedPosts","useMemo","console","log","b","localeCompare","useSortedPosts","post","title","toLowerCase","includes","PostService","axios","get","params","_limit","_page","response","id","PostItem","router","useHistory","body","remove","PostList","length","style","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","number","Loader","loader","PostForm","create","setPost","type","preventDefault","newPost","Date","now","Posts","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","useRef","getAll","data","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","marginTop","margin","height","background","display","justifyContent","AuthContext","createContext","Navbar","useContext","setIsAuth","isAuth","localStorage","removeItem","to","PostIdPage","useParams","comments","setComments","getById","fetchPostById","getCommentsByPostId","fetchComments","isComLoading","comm","email","privateRouters","path","components","exact","publicRouters","onSubmit","setItem","AppRouter","route","component","App","setLoading","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbb864cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__256n5\",\"myModalContent\":\"MyModal_myModalContent__3wVPv\",\"active\":\"MyModal_active__2bLoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__1nKmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__3rKhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2ld-R\",\"rotate\":\"Loader_rotate__38RxW\"};","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <h1>\r\n      Это приложение готово\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default About;","import {useState} from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      setIsLoading(true)\r\n      await callback(...args)\r\n    } catch (e) {\r\n      setError(e.onmessage)\r\n    }finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return [fetching, isLoading, error]\r\n}","export const getPageCount = (totalCount, limit) => {\r\n  return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n  let result = []\r\n  for (let i = 0; i < totalPages; i++) {\r\n    result.push(i + 1)\r\n  }\r\n  return result\r\n}","import React from 'react';\r\nimport classes from './MyButton.module.css'\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n  return (\r\n    <button {...props} className={classes.myBtn}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;","import React from 'react';\r\nimport cl from './MyModal.module.css';\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n\r\n  const rootClasses = [cl.myModal]\r\n\r\n  if(visible) {\r\n    rootClasses.push(cl.active);\r\n  }\r\n\r\n  return (\r\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n      <div className={cl.myModalContent} onClick={(e) => e.stopPropagation() }>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyModal;","import React from 'react';\r\nimport classes from './MyInput.module.css'\r\nconst MyInput = React.forwardRef((props, ref) => {\r\n  return (\r\n    <input ref={ref} className={classes.myInput} {...props} />\r\n  );\r\n});\r\n\r\nexport default MyInput;","import React from 'react';\r\n\r\nconst MySelect = ({option, defaultValue, value, onChange}) => {\r\n  return (\r\n    <select\r\n      value={value}\r\n      onChange={event => onChange(event.target.value)}\r\n    >\r\n      <option disabled value=\"\">{defaultValue}</option>\r\n      {option.map(option =>\r\n        <option key={option.value} value={option.value} >\r\n          {option.name}\r\n        </option>\r\n      )}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default MySelect;","import React from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\nconst PostFilter = ({filter, setFilter}) => {\r\n  return (\r\n    <div>\r\n      <MyInput\r\n        value={filter.query}\r\n        onChange={e => setFilter({...filter, query: e.target.value})}\r\n        placeholder=\"Поиск...\"\r\n      />\r\n      <MySelect\r\n        value={filter.sort}\r\n        onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n        defaultValue=\"Сортировка\"\r\n        option={[\r\n          {value: 'title', name: 'По названию'},\r\n          {value: 'body', name: 'По описанию'}\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFilter;","import React from 'react';\r\nimport {getPagesArray} from \"../../../utils/pages\";\r\n\r\nconst Pagination = ({totalPages, page, changePage}) => {\r\n  let pagesArray = getPagesArray(totalPages)\r\n  return (\r\n    <div className=\"page__wrapper\">\r\n      {pagesArray.map(p =>\r\n        <span onClick={() => changePage(p)} key={p} className={page === p ? 'page page__current' : 'page'}>\r\n            {p}\r\n          </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import {useMemo} from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n    console.log(\"Отработала функция сорт\")\r\n    if(sort) {\r\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n    }\r\n    return posts;\r\n  }, [sort, posts])\r\n\r\n  return sortedPosts;\r\n}\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n  const sortedPosts = useSortedPosts(posts, sort);\r\n\r\n  const sortedAndSearchedPosts = useMemo(() => {\r\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query))\r\n  }, [query, sortedPosts])\r\n\r\n  return sortedAndSearchedPosts;\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default class  PostService {\r\n  static async getAll(limit = 10, page = 1) {\r\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n        params: {\r\n          _limit: limit,\r\n          _page: page\r\n        }\r\n      })\r\n      return response\r\n  }\r\n\r\n  static async getById(id) {\r\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts/'+ id)\r\n    return response\r\n  }\r\n\r\n  static async getCommentsByPostId(id) {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\r\n    return response\r\n  }\r\n}","import React from 'react';\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst PostItem = (props) => {\r\n  const router = useHistory()\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__content\">\r\n        <strong>{props.post.id}. {props.post.title}</strong>\r\n        <div>\r\n          {props.post.body}\r\n        </div>\r\n      </div>\r\n      <div className=\"post__btns\">\r\n        <MyButton onClick={() => router.push(`/posts/${props.post.id}`)}>Открыть</MyButton>\r\n        <MyButton onClick={() => props.remove(props.post)}>Удалить</MyButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;","import React from 'react';\r\nimport PostItem from \"./PostItem\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nconst PostList = ({ posts, title, remove }) => {\r\n  if(!posts.length) {\r\n    return (\r\n      <h1 style={{textAlign: \"center\"}}>Посты не найдены</h1>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center' }}>\r\n        {title}\r\n      </h1>\r\n      <TransitionGroup>\r\n        {posts.map((post, index) =>\r\n         <CSSTransition\r\n           key={post.id}\r\n           timeout={500}\r\n           classNames=\"post\"\r\n         >\r\n           <PostItem remove={remove} number={index + 1} post={post} />\r\n         </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;","import React from 'react';\r\nimport cl from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={cl.loader}>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\nconst PostForm = ({create}) => {\r\n  const [post, setPost] = useState({ title: '', body: '' });\r\n\r\n  const addNewPost = (e) => {\r\n    e.preventDefault()\r\n    const newPost = {\r\n      ...post, id: Date.now()\r\n    }\r\n    create(newPost)\r\n    setPost({ title: '', body: '' })\r\n  }\r\n\r\n  return (\r\n      <form>\r\n        {/*Управляемый компонент*/}\r\n        <MyInput\r\n          value={post.title}\r\n          onChange={e => setPost({ ...post, title: e.target.value })}\r\n          type=\"text\"\r\n          placeholder=\"Название поста\"\r\n        />\r\n        <MyInput\r\n          value={post.body}\r\n          onChange={e => setPost({ ...post, body: e.target.value })}\r\n          type=\"text\"\r\n          placeholder=\"Описание поста\"\r\n        />\r\n        <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n      </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport {getPageCount} from \"../utils/pages\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport MyModal from \"../components/UI/MyModal/MyModal\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport Pagination from \"../components/UI/pagination/Pagination\";\r\nimport {usePosts} from \"../hooks/usePosts\";\r\nimport PostService from \"../API/PostService\";\r\nimport PostList from \"../components/PostList\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport {useObserver} from \"../hooks/useObserver\";\r\nimport MySelect from \"../components/UI/select/MySelect\";\r\n\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([])\r\n  const [filter, setFilter] = useState({sort: '', query: ''})\r\n  const [modal, setModal] = useState(false)\r\n  const [totalPages, setTotalPages] = useState(0)\r\n  const [limit, setLimit] = useState(10)\r\n  const [page, setPage] = useState(1)\r\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n  const lastElement = useRef()\r\n\r\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n    const response = await PostService.getAll(limit, page)\r\n    setPosts([...posts, ...response.data])\r\n    const totalCount = response.headers['x-total-count']\r\n    setTotalPages(getPageCount(totalCount, limit))\r\n  })\r\n\r\n\r\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n    setPage(page + 1)\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchPosts(limit, page)\r\n  }, [page, limit])\r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost])\r\n    setModal(false)\r\n  }\r\n\r\n  //получаем post из дочернего компонента\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter(p => p.id !== post.id))\r\n  }\r\n\r\n  const changePage = (page) => {\r\n    setPage(page)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <MyButton style={{marginTop: 30}} onClick={() => setModal(true)}>\r\n        Создать пользователя\r\n      </MyButton>\r\n\r\n      <MyModal visible={modal} setVisible={setModal}>\r\n        <PostForm create={createPost}/>\r\n      </MyModal>\r\n\r\n      <hr style={{margin: \"15px 0 \"}}/>\r\n\r\n      <PostFilter\r\n        filter={filter}\r\n        setFilter={setFilter}\r\n      />\r\n      <MySelect\r\n        value={limit}\r\n        onChange={value => setLimit(value)}\r\n        defaultValue=\"Количество елементов на странице\"\r\n        option={[\r\n          {value: 5, name: '5'},\r\n          {value: 10, name: '10'},\r\n          {value: 25, name: '25'},\r\n          {value: -1, name: 'Показать все'},\r\n        ]}\r\n      />\r\n      {postError &&\r\n        <h1>Произошла ошибка ${postError}</h1>\r\n      }\r\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Посты про JS\"/>\r\n      <div ref={lastElement} style={{height: 20, background: 'red'}}/>\r\n      {isPostsLoading &&\r\n        <div style={{display: 'flex', justifyContent: 'center', marginTop: 50}}><Loader/></div>\r\n      }\r\n      <Pagination\r\n        page={page}\r\n        changePage={changePage}\r\n        totalPages={totalPages}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import {useEffect, useRef} from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\r\n  const observer = useRef()\r\n  useEffect(() => {\r\n    if(isLoading) return;\r\n    if(observer.current) observer.current.disconnect()\r\n\r\n    var cb = function(entries, observer) {\r\n      if(entries[0].isIntersecting && canLoad) {\r\n        callback()\r\n      }\r\n      /* Content excerpted, show below */\r\n    };\r\n    observer.current = new IntersectionObserver(cb)\r\n    observer.current.observe(ref.current)\r\n  }, [isLoading])\r\n}","import {createContext} from 'react'\r\n\r\nexport const AuthContext = createContext(null)","import React, {useContext} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport MyButton from \"../button/MyButton\";\r\nimport {AuthContext} from \"../../../context/context\";\r\n\r\nconst Navbar = () => {\r\n  const {isAuth, setIsAuth} = useContext(AuthContext)\r\n\r\n  const logout = () => {\r\n    setIsAuth(false)\r\n    localStorage.removeItem('auth')\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <MyButton onClick={logout}>\r\n        Выйти\r\n      </MyButton>\r\n      <div className=\"navbar__links\">\r\n        <Link to=\"/about\">О сайте</Link>\r\n        <Link to=\"/posts\">Посты</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nconst PostIdPage = () => {\r\n  const params = useParams()\r\n  const [post, setPost] = useState({})\r\n  const [comments, setComments] = useState([])\r\n  const [fetchPostById, isLoading, error] = useFetching(async (id) => {\r\n    const response = await PostService.getById(id)\r\n    setPost(response.data)\r\n  })\r\n  const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\r\n    const response = await PostService.getCommentsByPostId(id)\r\n    setComments(response.data)\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchPostById(params.id)\r\n    fetchComments(params.id)\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h1>Вы открыли страницу поста ID = {params.id}</h1>\r\n      {isLoading\r\n        ? <Loader/>\r\n        : <div>{post.id}. {post.title}</div>\r\n      }\r\n      <h1>\r\n        Комментарии\r\n      </h1>\r\n      {isComLoading\r\n        ? <Loader/>\r\n        : <div>\r\n          {comments.map(comm =>\r\n            <div key={comm.id} style={{marginTop: 15}}>\r\n              <h5>{comm.email}</h5>\r\n              <div>{comm.body}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIdPage;","import About from \"../pages/About\";\r\nimport PostIdPage from \"../pages/PostIdPage\";\r\nimport Posts from \"../pages/Posts\";\r\nimport Login from \"../pages/Login\";\r\n\r\n\r\nexport const privateRouters = [\r\n  {path: '/about', components: About, exact: true},\r\n  {path: '/posts', components: Posts, exact: true},\r\n  {path: '/posts/:id', components: PostIdPage, exact: true},\r\n]\r\n\r\nexport const publicRouters = [\r\n  {path: '/login', components: Login, exact: true},\r\n]","import React, {useContext} from 'react';\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport {AuthContext} from \"../context/context\";\r\n\r\nconst Login = () => {\r\n  const {isAuth, setIsAuth} = useContext(AuthContext)\r\n\r\n  const login = event => {\r\n    event.preventDefault()\r\n    setIsAuth(true)\r\n    localStorage.setItem('auth', 'true')\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Страница для авторизации</h1>\r\n      <form onSubmit={login}>\r\n        <MyInput type=\"text\" placeholder=\"Введите логин:\"/>\r\n        <MyInput type=\"text\" placeholder=\"Введите пароль:\"/>\r\n        <MyButton>Войти</MyButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, {useContext} from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport About from \"../pages/About\";\r\nimport Posts from \"../pages/Posts\";\r\nimport Error from \"../pages/Error\";\r\nimport PostIdPage from \"../pages/PostIdPage\";\r\nimport {publicRouters, privateRouters} from \"../router/router\";\r\nimport {AuthContext} from \"../context/context\";\r\nimport Loader from \"./UI/Loader/Loader\";\r\n\r\nconst AppRouter = () => {\r\n  const {isAuth, isLoading} = useContext(AuthContext)\r\n\r\n  if(isLoading) {\r\n    return <Loader/>\r\n  }\r\n  return (\r\n    isAuth\r\n      ?\r\n      <Switch>\r\n        {privateRouters.map(route =>\r\n          <Route\r\n            component={route.components}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            key={route.path}\r\n          />\r\n        )}\r\n        <Redirect to=\"/posts\"/>\r\n      </Switch>\r\n      :\r\n      <Switch>\r\n        {publicRouters.map(route =>\r\n          <Route\r\n            component={route.components}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            key={route.path}\r\n          />\r\n        )}\r\n        <Redirect to=\"/login\"/>\r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\r\nimport './styles/App.css';\r\nimport {BrowserRouter as Router, Link, Redirect, Route, Switch,} from \"react-router-dom\";\r\nimport About from \"./pages/About\";\r\nimport Posts from \"./pages/Posts\";\r\nimport Navbar from \"./components/UI/Navbar/navbar\";\r\nimport Error from \"./pages/Error\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport {AuthContext} from \"./context/context\";\r\n\r\nfunction App() {\r\n  const [isAuth, setIsAuth] = useState(false)\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('auth')) {\r\n      setIsAuth(true)\r\n    }\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      isAuth,\r\n      setIsAuth,\r\n      isLoading\r\n    }}>\r\n      <Router>\r\n        <Navbar/>\r\n        <AppRouter/>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n//ядро реакта\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//Вызываем ф-цию рендер потом передаем компонент который необходимо отрисовать\r\n// В рут мы помещаем блок в который мы будем монтировать этот компонент --App\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}